IF                      : "if" ;
WHILE                   : "while" ;
CONST                   : "\d+|(true)|(false)" ;
CONSUMER1               : "print" ;
OPERATOR2               : "(&&)|(\|\|)|(>=)|(<=)|(==)|(!=)|[+-/*%<>]" ;
ASSIGNMENT              : "=" ;
IDENT                   : "([a-zA-z]|_)([a-zA-z]|[0-9]|_)*";
LPAR                    : "\(" ;
RPAR                    : "\)" ;


{
    print("Parsing started")
}

start                   : name vars ASSIGNMENT statement statements EOF ;

statements              : (statement statements)
                        | EPS ;

name                    : IDENT ;

vars                    : idents ;

idents                  : (IDENT idents)
                        | EPS ;

program                 : statement statements ;

statement               : ifC
                        | whileC
                        | assignment
                        | (LPAR program RPAR)
                        | action ;

ifC                     : IF expr statement ifPost ;

ifPost                  : EPS | statement ;

whileC                  : WHILE expr statement ;

assignment              : ASSIGNMENT IDENT expr ;

expr                    : CONST@1
                        | (OPERATOR2 expr@2 expr@3)
                        | IDENT
                        | (LPAR expr RPAR)
{
    if @1 is not None:
        print('This is const = ' + @1)
} ;


action                  : CONSUMER1 expr ;